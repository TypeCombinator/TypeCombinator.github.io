<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Draft - 分类 - TypeCombinator Home</title>
    <link>http://localhost:1313/categories/draft/</link>
    <description>TypeCombinator Home</description>
    <generator>Hugo 0.147.5 &amp; FixIt v0.3.20</generator>
    <language>en-us</language>
    <managingEditor>typecombinator@foxmail.com (TypeCombinator)</managingEditor>
    <webMaster>typecombinator@foxmail.com (TypeCombinator)</webMaster>
    <lastBuildDate>Fri, 05 Sep 2025 21:41:02 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/draft/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forward_like_tuple</title>
      <link>http://localhost:1313/posts/4af8519/</link>
      <pubDate>Fri, 05 Sep 2025 21:41:02 +0800</pubDate>
      <guid>http://localhost:1313/posts/4af8519/</guid>
      <category domain="http://localhost:1313/categories/draft/">Draft</category>
      <description>&lt;p&gt;&lt;em&gt;「把一个人的温暖转移到另一个的胸膛」&lt;/em&gt;&lt;br&gt;&#xA;——陈奕迅《爱情转移》&lt;/p&gt;&#xA;&lt;h2 class=&#34;heading-element&#34; id=&#34;前言&#34;&gt;&lt;span&gt;前言&lt;/span&gt;&#xA;  &lt;a href=&#34;#%e5%89%8d%e8%a8%80&#34; class=&#34;heading-mark&#34;&gt;&#xA;    &lt;svg class=&#34;octicon octicon-link&#34; viewBox=&#34;0 0 16 16&#34; version=&#34;1.1&#34; width=&#34;16&#34; height=&#34;16&#34; aria-hidden=&#34;true&#34;&gt;&lt;path d=&#34;m7.775 3.275 1.25-1.25a3.5 3.5 0 1 1 4.95 4.95l-2.5 2.5a3.5 3.5 0 0 1-4.95 0 .751.751 0 0 1 .018-1.042.751.751 0 0 1 1.042-.018 1.998 1.998 0 0 0 2.83 0l2.5-2.5a2.002 2.002 0 0 0-2.83-2.83l-1.25 1.25a.751.751 0 0 1-1.042-.018.751.751 0 0 1-.018-1.042Zm-4.69 9.64a1.998 1.998 0 0 0 2.83 0l1.25-1.25a.751.751 0 0 1 1.042.018.751.751 0 0 1 .018 1.042l-1.25 1.25a3.5 3.5 0 1 1-4.95-4.95l2.5-2.5a3.5 3.5 0 0 1 4.95 0 .751.751 0 0 1-.018 1.042.751.751 0 0 1-1.042.018 1.998 1.998 0 0 0-2.83 0l-2.5 2.5a1.998 1.998 0 0 0 0 2.83Z&#34;&gt;&lt;/path&gt;&lt;/svg&gt;&#xA;  &lt;/a&gt;&#xA;&lt;/h2&gt;&lt;p&gt;C&lt;ins&gt;23语核更新太少，一直没有动力去升级，不过考虑到明年是2026年了，26年用C&lt;/ins&gt;23还算合理吧？C++23中，能大幅简化代码的特性，首当其冲的恐怕就是&lt;strong&gt;deducing this&lt;/strong&gt;了，于是先使用该特性对代码进行了一番改造，终于不用再反复写&lt;code&gt;&amp;amp;&lt;/code&gt;、&lt;code&gt;const &amp;amp;&lt;/code&gt;、&lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;和&lt;code&gt;const &amp;amp;&amp;amp;&lt;/code&gt;这几种成员函数了，搭配上&lt;code&gt;forward_like&lt;/code&gt;，一个成员函数即覆盖所有情形，起初还算顺利，但是改造在&lt;code&gt;tuple&lt;/code&gt;时却碰到了单元测试编译报错的问题，一探之下，发现&lt;code&gt;forward_like&lt;/code&gt;并不适用于&lt;code&gt;tuple&lt;/code&gt;的&lt;code&gt;get&lt;/code&gt;方法。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
